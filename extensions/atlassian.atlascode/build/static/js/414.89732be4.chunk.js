"use strict";(self.webpackChunkatlascode=self.webpackChunkatlascode||[]).push([[414],{1108:(t,e,n)=>{n.d(e,{G:()=>getTimezoneOffsetInMilliseconds});var a=n(29407);function getTimezoneOffsetInMilliseconds(t){const e=(0,a.a)(t),n=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return n.setUTCFullYear(e.getFullYear()),+t-+n}},5305:(t,e,n)=>{n.d(e,{x:()=>normalizeDates});var a=n(43329);function normalizeDates(t,...e){const n=a.w.bind(null,t||e.find((t=>"object"===typeof t)));return e.map(n)}},14936:(t,e,n)=>{function getRoundingMethod(t){return e=>{const n=(t?Math[t]:Math.trunc)(e);return 0===n?0:n}}n.d(e,{u:()=>getRoundingMethod})},29407:(t,e,n)=>{n.d(e,{a:()=>toDate});var a=n(43329);function toDate(t,e){return(0,a.w)(e||t,t)}},43329:(t,e,n)=>{n.d(e,{w:()=>constructFrom});var a=n(61501);function constructFrom(t,e){return"function"===typeof t?t(e):t&&"object"===typeof t&&a._P in t?t[a._P](e):t instanceof Date?new t.constructor(e):new Date(e)}},44414:(t,e,n)=>{n.d(e,{m:()=>formatDistanceToNow});var a=n(43329);function constructNow(t){return(0,a.w)(t,Date.now())}var o=n(75156),r=n(92516),i=n(1108),s=n(5305),u=n(29407);function compareAsc(t,e){const n=+(0,u.a)(t)-+(0,u.a)(e);return n<0?-1:n>0?1:n}var d=n(61501);function differenceInCalendarMonths(t,e,n){const[a,o]=(0,s.x)(n?.in,t,e);return 12*(a.getFullYear()-o.getFullYear())+(a.getMonth()-o.getMonth())}function endOfDay(t,e){const n=(0,u.a)(t,e?.in);return n.setHours(23,59,59,999),n}function endOfMonth(t,e){const n=(0,u.a)(t,e?.in),a=n.getMonth();return n.setFullYear(n.getFullYear(),a+1,0),n.setHours(23,59,59,999),n}function isLastDayOfMonth(t,e){const n=(0,u.a)(t,e?.in);return+endOfDay(n,e)===+endOfMonth(n,e)}function differenceInMonths(t,e,n){const[a,o,r]=(0,s.x)(n?.in,t,t,e),i=compareAsc(o,r),u=Math.abs(differenceInCalendarMonths(o,r));if(u<1)return 0;1===o.getMonth()&&o.getDate()>27&&o.setDate(30),o.setMonth(o.getMonth()-i*u);let d=compareAsc(o,r)===-i;isLastDayOfMonth(a)&&1===u&&1===compareAsc(a,r)&&(d=!1);const c=i*(u-+d);return 0===c?0:c}var c=n(14936);function differenceInMilliseconds(t,e){return+(0,u.a)(t)-+(0,u.a)(e)}function differenceInSeconds(t,e,n){const a=differenceInMilliseconds(t,e)/1e3;return(0,c.u)(n?.roundingMethod)(a)}function formatDistance(t,e,n){const a=(0,r.q)(),u=n?.locale??a.locale??o.c,c=compareAsc(t,e);if(isNaN(c))throw new RangeError("Invalid time value");const l=Object.assign({},n,{addSuffix:n?.addSuffix,comparison:c}),[h,m]=(0,s.x)(n?.in,...c>0?[e,t]:[t,e]),f=differenceInSeconds(m,h),g=((0,i.G)(m)-(0,i.G)(h))/1e3,b=Math.round((f-g)/60);let M;if(b<2)return n?.includeSeconds?f<5?u.formatDistance("lessThanXSeconds",5,l):f<10?u.formatDistance("lessThanXSeconds",10,l):f<20?u.formatDistance("lessThanXSeconds",20,l):f<40?u.formatDistance("halfAMinute",0,l):f<60?u.formatDistance("lessThanXMinutes",1,l):u.formatDistance("xMinutes",1,l):0===b?u.formatDistance("lessThanXMinutes",1,l):u.formatDistance("xMinutes",b,l);if(b<45)return u.formatDistance("xMinutes",b,l);if(b<90)return u.formatDistance("aboutXHours",1,l);if(b<d.F6){const t=Math.round(b/60);return u.formatDistance("aboutXHours",t,l)}if(b<2520)return u.formatDistance("xDays",1,l);if(b<d.Nw){const t=Math.round(b/d.F6);return u.formatDistance("xDays",t,l)}if(b<2*d.Nw)return M=Math.round(b/d.Nw),u.formatDistance("aboutXMonths",M,l);if(M=differenceInMonths(m,h),M<12){const t=Math.round(b/d.Nw);return u.formatDistance("xMonths",t,l)}{const t=M%12,e=Math.trunc(M/12);return t<3?u.formatDistance("aboutXYears",e,l):t<9?u.formatDistance("overXYears",e,l):u.formatDistance("almostXYears",e+1,l)}}function formatDistanceToNow(t,e){return formatDistance(t,constructNow(t),e)}},61501:(t,e,n)=>{n.d(e,{Cg:()=>r,F6:()=>u,Nw:()=>s,_P:()=>d,my:()=>a,s0:()=>i,w4:()=>o});Math.pow(10,8);const a=6048e5,o=864e5,r=6e4,i=36e5,s=43200,u=1440,d=Symbol.for("constructDateFrom")},75156:(t,e,n)=>{n.d(e,{c:()=>i});const a={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function buildFormatLongFn(t){return(e={})=>{const n=e.width?String(e.width):t.defaultWidth;return t.formats[n]||t.formats[t.defaultWidth]}}const o={date:buildFormatLongFn({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:buildFormatLongFn({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:buildFormatLongFn({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})},r={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function buildLocalizeFn(t){return(e,n)=>{let a;if("formatting"===(n?.context?String(n.context):"standalone")&&t.formattingValues){const e=t.defaultFormattingWidth||t.defaultWidth,o=n?.width?String(n.width):e;a=t.formattingValues[o]||t.formattingValues[e]}else{const e=t.defaultWidth,o=n?.width?String(n.width):t.defaultWidth;a=t.values[o]||t.values[e]}return a[t.argumentCallback?t.argumentCallback(e):e]}}function buildMatchFn(t){return(e,n={})=>{const a=n.width,o=a&&t.matchPatterns[a]||t.matchPatterns[t.defaultMatchWidth],r=e.match(o);if(!r)return null;const i=r[0],s=a&&t.parsePatterns[a]||t.parsePatterns[t.defaultParseWidth],u=Array.isArray(s)?function findIndex(t,e){for(let n=0;n<t.length;n++)if(e(t[n]))return n;return}(s,(t=>t.test(i))):function findKey(t,e){for(const n in t)if(Object.prototype.hasOwnProperty.call(t,n)&&e(t[n]))return n;return}(s,(t=>t.test(i)));let d;d=t.valueCallback?t.valueCallback(u):u,d=n.valueCallback?n.valueCallback(d):d;return{value:d,rest:e.slice(i.length)}}}const i={code:"en-US",formatDistance:(t,e,n)=>{let o;const r=a[t];return o="string"===typeof r?r:1===e?r.one:r.other.replace("{{count}}",e.toString()),n?.addSuffix?n.comparison&&n.comparison>0?"in "+o:o+" ago":o},formatLong:o,formatRelative:(t,e,n,a)=>r[t],localize:{ordinalNumber:(t,e)=>{const n=Number(t),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:buildLocalizeFn({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:buildLocalizeFn({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:t=>t-1}),month:buildLocalizeFn({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:buildLocalizeFn({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:buildLocalizeFn({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})},match:{ordinalNumber:function buildMatchPatternFn(t){return(e,n={})=>{const a=e.match(t.matchPattern);if(!a)return null;const o=a[0],r=e.match(t.parsePattern);if(!r)return null;let i=t.valueCallback?t.valueCallback(r[0]):r[0];i=n.valueCallback?n.valueCallback(i):i;return{value:i,rest:e.slice(o.length)}}}({matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:t=>parseInt(t,10)}),era:buildMatchFn({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:buildMatchFn({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:t=>t+1}),month:buildMatchFn({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:buildMatchFn({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:buildMatchFn({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})},options:{weekStartsOn:0,firstWeekContainsDate:1}}},92516:(t,e,n)=>{n.d(e,{q:()=>getDefaultOptions});let a={};function getDefaultOptions(){return a}}}]);