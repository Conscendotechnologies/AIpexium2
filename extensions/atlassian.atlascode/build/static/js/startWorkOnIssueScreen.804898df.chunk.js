"use strict";(self.webpackChunkatlascode=self.webpackChunkatlascode||[]).push([[498],{63517:(e,t,a)=>{a.r(t),a.d(t,{default:()=>StartWorkPage});var s=a(19352),n=a(2499),i=a(22407),r=a(84005),o=a(39056),l=a(93420),c=a(46569),h=a(32935),m=a(73732),p=a(15560),u=a(57617),d=a(17565),g=a(72007),E=a(71210),b=a(57975),v=a(96540),y=a(76201),S=a(64933),B=a(6406);const k={details:B.Rc,ownerSlug:"",repoSlug:""},C={accountId:"",displayName:"",url:"",avatarUrl:"",mention:""},N={id:"",scm:void 0,name:"",displayName:"",fullName:"",parentFullName:void 0,url:"",avatarUrl:"",mainbranch:void 0,developmentBranch:void 0,branchingModel:void 0,issueTrackerEnabled:!1};var f;!function(e){e.ADDED="A",e.DELETED="D",e.COPIED="C",e.MODIFIED="M",e.RENAMED="R",e.CONFLICT="CONFLICT",e.UNKNOWN="X"}(f||(f={}));B.Rc;var O=a(31074),T=a(96611),x=a(70376),R=a(14596),A=a(59927),L=a(63489),w=a(17660),I=a(82522),D=a(66278),M=a(70246),W=a(79402);const{Option:P}=M.c,StatusOption=e=>v.createElement(P,{...e},v.createElement(D.A,{appearance:W.zK[e.data.to.statusCategory.colorName]},e.data.to.name)),StatusOptionWithTransitionName=e=>v.createElement(P,{...e},`${e.data.name} \u2192 `,v.createElement(D.A,{appearance:W.zK[e.data.to.statusCategory.colorName]},e.data.to.name)),StatusValue=e=>v.createElement(M.c.SingleValue,{...e},v.createElement(D.A,{appearance:W.zK[e.data.to.statusCategory.colorName]},e.data.to.name));class TransitionMenu extends v.Component{constructor(e){super(e),this.handleStatusChange=e=>{this.props.onStatusChange(e)};const t=this.getCurrentTransition(e.currentStatus,e.transitions);this.state={selectedTransition:t,showTransitionName:this.shouldShowTransitionName(e.transitions)}}componentWillReceiveProps(e){const t=this.getCurrentTransition(e.currentStatus,e.transitions);this.setState({selectedTransition:t,showTransitionName:this.shouldShowTransitionName(e.transitions)})}getCurrentTransition(e,t){const a=t.find((t=>t.to.id===e.id));return void 0!==a?a:{...g.rv,to:e}}shouldShowTransitionName(e){return e.some((e=>e.name!==e.to.name))}render(){return!Array.isArray(this.props.transitions)||this.props.transitions.length<1?v.createElement("div",null):v.createElement(u.A,{name:"status",id:"status",className:"ac-select-container",classNamePrefix:"ac-select",options:this.props.transitions,value:this.state.selectedTransition,components:{Option:this.state.showTransitionName?StatusOptionWithTransitionName:StatusOption,SingleValue:StatusValue},getOptionLabel:e=>e.to.name,getOptionValue:e=>e.id,isDisabled:this.props.isStatusButtonLoading,isLoading:this.props.isStatusButtonLoading,onChange:this.handleStatusChange})}}const j={workspaceRepo:{rootUri:"",mainSiteRemote:{site:k,remote:{name:"",isReadOnly:!0}},siteRemotes:[]},localBranches:[],remoteBranches:[],branchTypes:[],isCloud:!0},U={data:{type:"update",issue:(0,g.YB)(B.Rc),repoData:[]},issueType:"jiraIssue",jiraSetupEnabled:!0,bitbucketSetupEnabled:!0,transition:g.rv,repo:j,localBranch:void 0,existingBranchOptions:[],isStartButtonLoading:!1,result:{type:"startWorkOnIssueResult",successMessage:void 0,error:void 0},isErrorBannerOpen:!1,errorDetails:void 0,isOnline:!0};class StartWorkPage extends w.B{constructor(e){super(e),this.isEmptyRepo=e=>e===j,this.handleStatusChange=e=>{this.setState({data:{...this.state.data,issue:{...this.state.data.issue,status:{...this.state.data.issue.status,id:e.to.id,name:e.to.name}}},transition:e})},this.handleRepoChange=e=>{const t=this.state.data.issue.key,a=e.localBranches.find((t=>void 0!==t.name&&-1!==t.name.indexOf(e.developmentBranch)));this.setState({repo:e,sourceBranch:a,branchType:e.branchTypes.length>0?e.branchTypes[0]:void 0,existingBranchOptions:this.getExistingBranchOptions(e,t)})},this.handleSourceBranchChange=e=>{this.setState({sourceBranch:e})},this.handleBranchNameChange=e=>{this.setState({localBranch:e})},this.handleSelectExistingBranch=e=>{const t=this.state.repo.branchTypes.find((t=>e.startsWith(t.prefix)));this.setState({branchType:t,localBranch:t?e.substring(t.prefix.length):e})},this.toggleJiraSetupEnabled=e=>{this.setState({jiraSetupEnabled:e.target.checked})},this.toggleBitbucketSetupEnabled=e=>{this.setState({bitbucketSetupEnabled:e.target.checked})},this.handleSiteRemoteChange=e=>{this.setState({siteRemote:e})},this.handleStart=()=>{this.setState({isStartButtonLoading:!0});let e="";if(this.state.localBranch){e=(this.state.branchType?this.state.branchType.prefix:"")+this.state.localBranch}this.postMessage({action:"startWork",repoUri:this.state.repo.workspaceRepo.rootUri,targetBranchName:e,sourceBranch:this.state.sourceBranch,remoteName:this.state.siteRemote?this.state.siteRemote.remote.name:"",transition:this.state.transition,setupJira:this.state.jiraSetupEnabled,setupBitbucket:!this.isEmptyRepo(this.state.repo)&&this.state.bitbucketSetupEnabled,pushBranchToRemote:!1})},this.handleDismissError=()=>{this.setState({isErrorBannerOpen:!1,errorDetails:void 0})},this.state=U}onMessageReceived(e){switch(e.type){case"error":this.setState({isStartButtonLoading:!1,isErrorBannerOpen:!0,errorDetails:e.reason});break;case"update":if((0,O.K3)(e)&&e.issue.key.length>0){const t=this.isEmptyRepo(this.state.repo)&&e.repoData.length>0?e.repoData[0]:this.state.repo,a=this.state.transition===g.rv&&e.issue.transitions.find((t=>t.to.id===e.issue.status.id))||this.state.transition,s="jiraIssue",n=e.issue.key,i=e.issue.summary;this.updateState(e,s,t,n,i,a)}else this.setState(U);break;case"startWorkOnIssueResult":(0,O.t5)(e)&&this.setState({isStartButtonLoading:!1,result:e,isErrorBannerOpen:!1,errorDetails:void 0});break;case"onlineStatus":this.setState({isOnline:e.isOnline}),e.isOnline&&this.postMessage({action:"refreshIssue"})}return!0}getExistingBranchOptions(e,t){return[...e.localBranches.filter((e=>e.name.toLowerCase().includes(t.toLowerCase()))).map((e=>e.name)),...e.remoteBranches.filter((e=>e.name.toLowerCase().includes(t.toLowerCase()))).filter((t=>!e.localBranches.some((e=>t.name.endsWith(e.name))))).map((e=>e.name.replace(`${e.remote}/`,"")))]}updateState(e,t,a,s,n,i){const r=this.state.existingBranchOptions.length>0?this.state.existingBranchOptions:this.getExistingBranchOptions(a,s),o=this.state.localBranch||`${s}-${n.substring(0,50).trim().toLowerCase().replace(/\W+/g,"-")}`,l=this.state.sourceBranch||a.localBranches.find((e=>void 0!==e.name&&-1!==e.name.indexOf(a.developmentBranch)))||a.localBranches[0];let c=this.state.siteRemote;this.state.siteRemote||(c=a.workspaceRepo.mainSiteRemote),this.setState({data:e,issueType:t,repo:a,sourceBranch:l,transition:i,existingBranchOptions:r,localBranch:o,branchType:a.branchTypes.length>0?a.branchTypes[0]:void 0,siteRemote:c,bitbucketSetupEnabled:!this.isEmptyRepo(a)&&this.state.bitbucketSetupEnabled,isErrorBannerOpen:!1,errorDetails:void 0})}render(){if(""===this.state.data.issue.key&&!this.state.isErrorBannerOpen&&this.state.isOnline)return this.postMessage({action:"refreshIssue"}),v.createElement(x.V,null);const e=this.state.data.issue,t=this.state.repo,a=v.createElement("div",{className:"ac-vpadding"},v.createElement("p",null,v.createElement("strong",null,"Tip:")," You can have issue keys auto-added to your commit messages using"," ",v.createElement("a",{type:"button",className:"ac-link-button",href:"https://github.com/atlassian/atlascode/blob/main/scripts/prepare-commit-jira.sh"},v.createElement("span",null,"our prepare-commit-msg hook"))));let g=v.createElement(l.A,{medium:8},v.createElement("em",null,v.createElement("p",null,"Start work on:")));return"jiraIssue"===this.state.issueType&&(0,E.RP)(e)&&(g=v.createElement(l.A,{medium:8},v.createElement("em",null,v.createElement("p",null,"Start work on:")),v.createElement(m.A,{actions:void 0,breadcrumbs:v.createElement(s.A,null,e.parentKey&&v.createElement(n.A,{component:()=>v.createElement(I.A,{text:`${e.parentKey}`,onItemClick:()=>this.postMessage({action:"openJiraIssue",issueOrKey:{siteDetails:e.siteDetails,key:e.parentKey}})})}),v.createElement(n.A,{component:()=>v.createElement(I.A,{text:`${e.key}`,iconUrl:e.issuetype.iconUrl,onItemClick:()=>this.postMessage({action:"openJiraIssue",issueOrKey:e}),onCopy:()=>this.postMessage({action:"copyJiraIssueLink"})})}))},v.createElement("p",null,e.summary)),v.createElement("p",{dangerouslySetInnerHTML:{__html:e.descriptionHtml}}))),v.createElement(c.Ay,null,v.createElement(T.H,{context:{view:S.id.OldStartWorkPage},postMessageFunc:e=>{this.postMessage(e)}},v.createElement(h.A,null,v.createElement(l.A,{medium:8},!this.state.isOnline&&v.createElement(L.A,null),this.state.result.successMessage&&v.createElement(p.A,{appearance:"confirmation",title:"Work Started"},v.createElement("div",{className:"start-work-success"},v.createElement("p",{dangerouslySetInnerHTML:{__html:this.state.result.successMessage}}))),this.state.isErrorBannerOpen&&v.createElement(R.A,{onDismissError:this.handleDismissError,errorDetails:this.state.errorDetails})),g,"jiraIssue"===this.state.issueType&&v.createElement(l.A,{medium:6},v.createElement("div",{style:{display:"flex",alignItems:"center"}},v.createElement(o.A,{isChecked:this.state.jiraSetupEnabled,onChange:this.toggleJiraSetupEnabled,name:"setup-jira-checkbox"}),v.createElement("h4",null,"Transition issue")),this.state.jiraSetupEnabled&&v.createElement("div",{style:{margin:10,borderLeftWidth:"initial",borderLeftStyle:"solid",borderLeftColor:"var(--vscode-settings-modifiedItemIndicator)"}},v.createElement("div",{style:{margin:10}},v.createElement("label",null,"Select new status"),v.createElement(TransitionMenu,{transitions:e.transitions,currentStatus:e.status,isStatusButtonLoading:!1,onStatusChange:this.handleStatusChange})))),v.createElement(l.A,{medium:12}),v.createElement(l.A,{medium:8},v.createElement("div",{style:{display:"flex",alignItems:"center"}},v.createElement(o.A,{isChecked:this.state.bitbucketSetupEnabled,onChange:this.toggleBitbucketSetupEnabled,name:"setup-bitbucket-checkbox"}),v.createElement("h4",null,"Set up git branch")),this.isEmptyRepo(t)&&v.createElement("div",{style:{margin:10,borderLeftWidth:"initial",borderLeftStyle:"solid",borderLeftColor:"var(--vscode-settings-modifiedItemIndicator)"}},v.createElement("div",{style:{margin:10}},v.createElement("div",{className:"ac-vpadding"},v.createElement("label",null,"Repository"),v.createElement(u.A,{className:"ac-select-container",classNamePrefix:"ac-select",placeholder:"No repositories found...",value:t})))),this.state.bitbucketSetupEnabled&&!this.isEmptyRepo(this.state.repo)&&v.createElement("div",{style:{margin:10,borderLeftWidth:"initial",borderLeftStyle:"solid",borderLeftColor:"var(--vscode-settings-modifiedItemIndicator)"}},v.createElement("div",{style:{margin:10}},this.state.data.repoData.length>1&&v.createElement("div",{className:"ac-vpadding"},v.createElement("label",null,"Repository"),v.createElement(u.A,{className:"ac-select-container",classNamePrefix:"ac-select",options:this.state.data.repoData,getOptionLabel:e=>this.isEmptyRepo(e)?"No repositories found...":b.basename(e.workspaceRepo.rootUri),getOptionValue:e=>e,onChange:this.handleRepoChange,placeholder:"Loading...",value:t})),t.branchTypes.length>0&&v.createElement("div",{className:"ac-vpadding",style:{textTransform:"capitalize"}},v.createElement("label",null,"Type"),v.createElement(d.A,{className:"ac-select-container",classNamePrefix:"ac-select",options:t.branchTypes,getOptionLabel:e=>e.kind,getOptionValue:e=>e.prefix,onChange:e=>{this.setState({branchType:e})},value:this.state.branchType})),v.createElement("div",{className:"ac-vpadding"},v.createElement("label",null,"Source branch (this will be the start point for the new branch)"),v.createElement(u.A,{className:"ac-select-container",classNamePrefix:"ac-select",options:[...t.localBranches,...t.remoteBranches],getOptionLabel:e=>e.name,getOptionValue:e=>e,onChange:this.handleSourceBranchChange,value:this.state.sourceBranch})),v.createElement("div",{className:"ac-vpadding"},v.createElement("label",null,"Local branch"),v.createElement("div",{className:"branch-container"},this.state.branchType&&this.state.branchType.prefix&&v.createElement("div",{className:"prefix-container"},v.createElement("label",null,this.state.branchType.prefix)),v.createElement("div",{className:"branch-name"},v.createElement(y.A,{type:"text",value:this.state.localBranch||"",onSave:this.handleBranchNameChange,validation:A.Qh,validationMessage:"Branch name is required",inputProps:{className:"ac-inputField"},viewProps:{id:"start-work-branch-name",className:"ac-inline-input-view-p"},editButtonClassName:"ac-inline-edit-button",cancelButtonClassName:"ac-inline-cancel-button",saveButtonClassName:"ac-inline-save-button",editOnViewClick:!0}))),this.state.existingBranchOptions.length>0&&v.createElement(p.A,{appearance:"change",title:"Use an existing branch?"},v.createElement("div",null,v.createElement("p",null,"Click to use an existing branch for this issue: (",v.createElement("em",null,"source branch selection is ignored for existing branches"),")"),v.createElement("ul",null,this.state.existingBranchOptions.map((e=>v.createElement("li",null,v.createElement(i.A,{className:"ac-link-button",appearance:"link",onClick:()=>this.handleSelectExistingBranch(e)},e)))))))),t.workspaceRepo.siteRemotes.length>1&&v.createElement("div",null,v.createElement("label",null,"Set upstream to"),v.createElement(u.A,{className:"ac-select-container",classNamePrefix:"ac-select",options:t.workspaceRepo.siteRemotes,getOptionLabel:e=>e.remote.name,getOptionValue:e=>e,onChange:this.handleSiteRemoteChange,value:this.state.siteRemote}))))),v.createElement(l.A,{medium:12},v.createElement("div",{className:"ac-vpadding"},!this.state.result.successMessage&&v.createElement(r.A,{className:"ac-button",isLoading:this.state.isStartButtonLoading,onClick:this.handleStart},"Start")),a))))}}},82522:(e,t,a)=>{a.d(t,{A:()=>NavItem});var s=a(22407),n=a(76234),i=a(15547),r=a(96540);class NavItem extends r.Component{render(){return r.createElement("div",{className:"ac-icon-with-text"},this.props.iconUrl&&r.createElement("img",{style:{paddingRight:"5px"},src:this.props.iconUrl}),r.createElement("div",{className:"jira-issue-key"},r.createElement(s.A,{className:"ac-link-button",appearance:"link",spacing:"none",href:this.props.href,onClick:this.props.onItemClick},this.props.text),this.props.onCopy&&r.createElement("div",{className:"jira-issue-copy-icon",onClick:this.props.onCopy},r.createElement(i.A,{content:"Copy the web link to clipboard"},r.createElement(n.A,{label:"copy issue link",size:"small"})))))}}}}]);